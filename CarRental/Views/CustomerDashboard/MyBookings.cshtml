@{
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}

<style>
    body {
        background: transparent; /* no extra bg */
        color: #f8f9fa;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
    }

    /* Main container as glass card */
    .container {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(12px);
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 0 25px rgba(0, 0, 0, 0.4);
        animation: fadeSlideIn 0.8s ease;
    }

    /* Success alert glass */
    #successMessage {
        background: rgba(0, 255, 0, 0.1);
        backdrop-filter: blur(8px);
        border: 1px solid rgba(0, 255, 0, 0.3);
        border-radius: 12px;
        color: #00ff88;
        box-shadow: 0 0 12px rgba(0, 255, 0, 0.5);
        animation: pulse 1.2s ease-in-out infinite alternate;
    }

    /* Glass Table */
    .table {
        border-radius: 15px;
        overflow: hidden;
        background: rgba(255, 255, 255, 0.04);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.08);
    }

        /* Table header */
        .table thead {
            background: rgba(255, 0, 0, 0.2);
            backdrop-filter: blur(6px);
        }

    /* Row hover */
    .table-row-hover {
        transition: all 0.3s ease-in-out;
    }

        .table-row-hover:hover {
            background-color: rgba(255, 0, 0, 0.2) !important;
            transform: scale(1.02);
            box-shadow: 0 0 10px rgba(255, 0, 0, 0.4);
        }

    /* Status badges */
    .status-active,
    .status-cancelled,
    .status-other {
        backdrop-filter: blur(6px);
        padding: 6px 15px;
        border-radius: 20px;
        font-weight: 600;
    }

    .status-active {
        background: rgba(40, 167, 69, 0.25);
        color: #28a745;
        box-shadow: 0 0 8px rgba(40, 167, 69, 0.6);
    }

    .status-cancelled {
        background: rgba(220, 53, 69, 0.25);
        color: #ff4d5b;
        box-shadow: 0 0 8px rgba(220, 53, 69, 0.6);
    }

    .status-other {
        background: rgba(108, 117, 125, 0.25);
        color: #ccc;
        box-shadow: 0 0 8px rgba(108, 117, 125, 0.5);
    }

    /* Cancel button */
    .cancel-btn {
        border-radius: 12px;
        background: rgba(255, 0, 0, 0.1);
        border: 1px solid rgba(255, 0, 0, 0.4);
        color: #ff4444;
        font-weight: 600;
        transition: all 0.3s ease-in-out;
        backdrop-filter: blur(6px);
    }

        .cancel-btn:hover {
            background: rgba(255, 0, 0, 0.8);
            color: #fff !important;
            box-shadow: 0 0 15px rgba(255, 0, 0, 0.9);
            transform: translateY(-2px);
        }

    /* Animations */
    @@keyframes fadeSlideIn {
        from {
            opacity: 0;
            transform: translateY(20px) scale(0.98);
        }

        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    @@keyframes pulse {
        from {
            box-shadow: 0 0 5px rgba(0, 255, 0, 0.4);
        }

        to {
            box-shadow: 0 0 20px rgba(0, 255, 0, 0.8);
        }
    }


    /* Starkku */
    .star {
        position: fixed;
        width: 8px;
        height: 8px;
        background: gold;
        border-radius: 50%;
        animation: twinkle 1s infinite alternate;
        z-index: 9999;
    }

    @@keyframes twinkle {
        from {
            opacity: 0.3;
            transform: scale(0.5);
        }

        to {
            opacity: 1;
            transform: scale(1.5);
        }
    }

    /* balloon */
    /* .balloon {
            position: fixed;
            bottom: -50px;
            width: 25px;
            height: 35px;
            border-radius: 50%;
            animation: floatUp 3s ease forwards;
            z-index: 9999;
        }

        @@keyframes floatUp {
            to

        {
            transform: translateY(-120vh);
            opacity: 0;
        }

        } */


    /* .success-glow {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 255, 0, 0.3);
            animation: glow 1s ease-in-out infinite alternate;
            pointer-events: none;
            z-index: 9998;
        }

        @@keyframes glow {
            from

        {
            opacity: 0;
        }

        to {
            opacity: 1;
        }

        } */
</style>

@model IEnumerable<CarRental.DTOs.BookingDto>
@if (TempData["BookingSuccess"] != null)
{
    <div id="successMessage" class="alert alert-success text-center fw-bold">
        @TempData["BookingSuccess"]
    </div>
}
<div class="container py-5">
    <h2 class="text-danger fw-bold mb-4 animate-fade">My Bookings</h2>
    
    <table class="table table-dark table-hover align-middle shadow-lg rounded-4 overflow-hidden">
        <thead class="bg-gradient text-white text-center">
            <tr>
                <th><i class="bi bi-car-front-fill"></i> Car</th>
                <th><i class="bi bi-calendar-event"></i> Pickup Date</th>
                <th><i class="bi bi-calendar-check"></i> Drop Off Date</th>
                <th><i class="bi bi-cash-stack"></i> Total Price</th>
                <th><i class="bi bi-info-circle"></i> Status</th>
                <th><i class="bi bi-gear"></i> Action</th>
            </tr>
        </thead>
        <tbody class="text-center">
            @foreach (var booking in Model)
            {
                <tr class="table-row-hover">
                    <td class="fw-bold">@booking.CarName</td>
                    <td>@booking.PickupDate.ToString("dd-MMM-yyyy")</td>
                    <td>@booking.DropOffDate.ToString("dd-MMM-yyyy")</td>
                    <td class="fw-bold text-success">$@booking.TotalPrice</td>
                    <td>
                        @if (booking.Status == "Active")
                        {
                            <span class="badge status-active">Active</span>
                        }
                        else if (booking.Status == "Cancelled")
                        {
                            <span class="badge status-cancelled">Cancelled</span>
                        }
                        else
                        {
                            <span class="badge status-other">@booking.Status</span>
                        }
                    </td>
                    <td>
                        @if (booking.Status == "Active")
                        {
                            <form asp-controller="Booking" asp-action="Cancel" method="post" onsubmit="return confirm('⚠️ Cancel this booking?');" style="display:inline;">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@booking.Id" />
                                <button type="submit" class="btn cancel-btn btn-sm">
                                    <i class="bi bi-x-circle"></i> Cancel
                                </button>
                            </form>
                        }
                        else
                        {
                            <span class="text-white fst-italic">No Action</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">


<div id="animationContainer"></div>

@* starkku *@
<script>
    function showStars() {
        for (let i = 0; i < 30; i++) {
            let star = document.createElement("div");
            star.classList.add("star");
            star.style.left = Math.random() * 100 + "vw";
            star.style.top = Math.random() * 100 + "vh";
            document.body.appendChild(star);

            setTimeout(() => star.remove(), 3000);
        }
    }

    window.addEventListener("load", function () {
        var successMsg = document.getElementById("successMessage");
        if (successMsg) {
            showStars();
            setTimeout(() => successMsg.remove(), 3000);
        }
    });
</script>


@* balloon *@
@* <script>
    function launchBalloons() {
        for (let i = 0; i < 20; i++) {
            let balloon = document.createElement("div");
            balloon.classList.add("balloon");
            balloon.style.left = Math.random() * 100 + "vw";
            balloon.style.background = `hsl(${Math.random() * 360}, 70%, 60%)`;
            document.body.appendChild(balloon);

            setTimeout(() => balloon.remove(), 3000);
        }
    }

    window.addEventListener("load", function () {
        var successMsg = document.getElementById("successMessage");
        if (successMsg) {
            launchBalloons();
            setTimeout(() => successMsg.remove(), 3000);
        }
    });
</script> 

@* 
<script>
    window.addEventListener("load", function () {
        var successMsg = document.getElementById("successMessage");
        if (successMsg) {
            let glow = document.createElement("div");
            glow.classList.add("success-glow");
            document.body.appendChild(glow);

            setTimeout(() => {
                glow.remove();
                successMsg.remove();
            }, 3000);
        }
    });

</script> *@