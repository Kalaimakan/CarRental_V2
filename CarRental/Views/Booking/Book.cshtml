@model CarRental.ViewModels.BookingViewModel

<div class="container d-flex justify-content-center align-items-center" style="min-height:100vh; background: linear-gradient(135deg, #0f0f0f, #1a1a1a);">
    <div class="card p-4 shadow-lg text-white"
         style="width: 450px; border-radius: 20px; background: rgba(255, 255, 255, 0.05); backdrop-filter: blur(12px); border: 1px solid rgba(255, 255, 255, 0.15);">

        <h4 class="mb-3 text-center fw-bold text-danger">🚗 Book Your Rental</h4>

        <img src="~/images/@Model.CarImage" class="img-fluid rounded mb-3 shadow-sm" style="border-radius:15px;" />

        <h5 class="text-center">@Model.CarBrand @Model.CarModel</h5>
        <hr class="border-light" />

        <form asp-action="Book" method="post">
            <input type="hidden" asp-for="CarId" />
            <input type="hidden" id="PricePerDay" value="@Model.PricePerDay" />

            <!-- Pick-up DateTime -->
            <div class="mb-3">
                <label class="fw-bold">Pick-up Date & Time</label>
                <input asp-for="PickUpDate" type="datetime-local" class="form-control bg-dark text-white border-0 shadow-sm" id="pickUpDate" />
                <span asp-validation-for="PickUpDate" class="text-danger small"></span>
            </div>

            <!-- Drop-off DateTime -->
            <div class="mb-3">
                <label class="fw-bold">Drop-off Date & Time</label>
                <input asp-for="DropOffDate" type="datetime-local" class="form-control bg-dark text-white border-0 shadow-sm" id="dropOffDate" />
                <span asp-validation-for="DropOffDate" class="text-danger small"></span>
            </div>

            <!-- Total -->
            <div class="mb-3">
                <label class="fw-bold">Total Amount ($)</label>
                <input asp-for="TotalAmount" class="form-control bg-dark text-white border-0 shadow-sm" id="totalAmount" readonly />
            </div>

            <!-- Error Message -->
            <div id="dateError" class="text-danger small mb-2" style="display:none;"></div>

            <!-- Buttons -->
            <div class="d-flex gap-2">
                <button type="submit" class="btn flex-fill btn-confirm">Confirm Booking</button>
                <button type="button" class="btn flex-fill btn-back" onclick="history.back()">Back</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <style>
        /* 🔹 Buttons */
        .btn-confirm {
            background: #d90429;
            color: #fff;
            font-weight: bold;
            border-radius: 12px;
            transition: all 0.3s ease;
        }

            .btn-confirm:hover {
                background: #ff1e56;
                transform: scale(1.05);
                box-shadow: 0 0 12px rgba(255, 30, 86, 0.6);
            }

        .btn-back {
            background: #222;
            color: #fff;
            font-weight: bold;
            border-radius: 12px;
            transition: all 0.3s ease;
        }

            .btn-back:hover {
                background: #444;
                transform: scale(1.05);
                box-shadow: 0 0 12px rgba(255, 255, 255, 0.3);
            }

        /* 🔹 Inputs */
        input.form-control {
            border-radius: 10px;
            padding: 10px;
            transition: all 0.3s ease;
        }

            input.form-control:focus {
                outline: none;
                box-shadow: 0 0 10px rgba(217, 4, 41, 0.7);
            }
    </style>

    <script>
        const pricePerDay = parseFloat(document.getElementById("PricePerDay").value);

        function calculateTotal() {
            const pickUpValue = document.getElementById("pickUpDate").value;
            const dropOffValue = document.getElementById("dropOffDate").value;
            const errorMsg = document.getElementById("dateError");

            if (!pickUpValue || !dropOffValue) {
                document.getElementById("totalAmount").value = "";
                errorMsg.style.display = "none";
                return;
            }

            const pickUpDate = new Date(pickUpValue);
            const dropOffDate = new Date(dropOffValue);

            if (!isNaN(pickUpDate) && !isNaN(dropOffDate)) {
                if (dropOffDate <= new Date(pickUpDate.getTime() + 24 * 60 * 60 * 1000)) {
                    document.getElementById("totalAmount").value = "";
                    errorMsg.innerText = "❌ Drop-off must be at least 24 hours after Pick-up";
                    errorMsg.style.display = "block";
                } else {
                    const diffTime = dropOffDate - pickUpDate;
                    const days = diffTime / (1000 * 60 * 60 * 24);
                    const total = Math.ceil(days) * pricePerDay;

                    document.getElementById("totalAmount").value = total.toFixed(2);
                    errorMsg.style.display = "none";
                }
            }
        }

        document.getElementById("pickUpDate").addEventListener("change", calculateTotal);
        document.getElementById("dropOffDate").addEventListener("change", calculateTotal);
    </script>
}
