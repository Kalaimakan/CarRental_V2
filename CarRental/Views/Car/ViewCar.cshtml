@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@model List<CarRental.DTOs.CarDto>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show m-3 professional-alert" role="alert">
        <i class="bi bi-check-circle me-2"></i>@TempData["Success"]
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container-fluid mt-4">
    <div class="card dashboard-card shadow-lg border-0 glass-effect">

        <!-- Dashboard Title -->
        <div class="card-header text-white text-center py-3 dashboard-header glass-header">
            <h3 class="mb-0 fw-bold">Car List Dashboard</h3>
        </div>

        <!-- Top Actions -->
        <div class="d-flex flex-wrap justify-content-between align-items-center px-3 py-3 actions-bar">
            <div class="d-flex gap-2 mb-3">
                <input type="text" id="brandFilter" class="form-control text-white search-box" placeholder="Search by Brand">
                <input type="text" id="modelFilter" class="form-control text-white search-box" placeholder="Search by Model">
                <select id="statusFilter" class="form-control">
                    <option value="">All Status</option>
                    <option value="available">Available</option>
                    <option value="not available">Not Available</option>
                </select>
            </div>

            <a class="btn fw-bold blue-btn" asp-action="Add">
                <i class="bi bi-plus-circle me-1"></i> Add Car
            </a>
        </div>

        <!-- Table -->
        <div class="table-responsive p-3">
            <table id="carTable" class="table table-hover align-middle text-center mb-0 glass-table">
                <thead class="table-header glass-thead">
                    <tr>
                        <th>Brand</th>
                        <th>Model</th>
                        <th>Colour</th>
                        <th>Seats</th>
                        <th>Fuel</th>
                        <th>Transmission</th>
                        <th>AC</th>
                        <th>Price/Day</th>
                        <th>Status</th>
                        <th>Images</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody class="glass-tbody">
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var car in Model)
                        {
                            <tr class="glass-row">
                                <td>@car.CarBrand</td>
                                <td>@car.CarModel</td>
                                <td>@car.CarColour</td>
                                <td>@car.Seats</td>
                                <td>@car.FuelType</td>
                                <td>@car.Transmission</td>
                                <td>@(car.HasAC ? "AC" : "Non-AC")</td>
                                <td>Rs. @car.PricePerDay</td>
                                <td>
                                    @if (car.Status)
                                    {
                                        <span class="badge badge-available">Available</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-unavailable">Not Available</span>
                                    }
                                </td>
                                <td>
                                    <div class="d-flex justify-content-center gap-2">
                                        @foreach (var img in car.Images.Take(2))
                                        {
                                            <img src="~/images/@img.FileName" class="rounded shadow-sm img-preview" />
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex justify-content-center gap-1">
                                        <a class="btn btn-outline-info btn-sm glass-action-btn" asp-action="Update" asp-route-id="@car.Id">
                                            <i class="bi bi-pencil-square"></i>
                                        </a>
                                        <a class="btn btn-outline-danger btn-sm glass-action-btn" asp-action="Delete" asp-route-id="@car.Id"
                                           onclick="return confirm('Are you sure you want to delete this car?');">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr class="glass-row">
                            <td colspan="11" class="text-center text-white py-4">No cars found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    /* Reset Bootstrap White Backgrounds */
    .table, .table th, .table td,
    .form-control, .btn {
        background-color: transparent !important;
        background: transparent !important;
    }

    /* Glass Effect Cards / Containers */
    .glass-effect {
        background: rgba(255, 255, 255, 0.08) !important;
        backdrop-filter: blur(15px);
        border-radius: 20px;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .glass-header {
        background: rgba(255, 255, 255, 0.12) !important;
        backdrop-filter: blur(10px);
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    }

    .search-box {
        border-radius: 8px;
        padding: 8px;
        border: 1px solid #ccc;
    }

        .search-box:focus {
            outline: none;
            border-color: #ff4d4d; /* red border on focus */
            box-shadow: 0 0 5px rgba(255, 77, 77, 0.5);
        }
    /* Glass Inputs */
    .glass-input {
        background: rgba(255, 255, 255, 0.1) !important;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3) !important;
        border-radius: 12px;
        color: #fff !important;
        transition: all 0.3s ease;
    }

        .glass-input::placeholder {
            color: rgba(255, 255, 255, 0.7) !important;
        }

        .glass-input:focus {
            background: rgba(255, 255, 255, 0.15) !important;
            border-color: rgba(255, 255, 255, 0.5) !important;
            box-shadow: 0 0 20px rgba(255, 255, 255, 0.2) !important;
            color: #fff !important;
        }

    /* Universal Glass Button Base*/
    .glass-btn {
        border-radius: 12px;
        padding: 8px 18px;
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
        letter-spacing: 0.5px;
        font-weight: 600;
        color: #fff !important;
        border: 1px solid transparent;
    }

    /* Blue Glass Button (Save, Add, Search, Update) */
    .blue-btn {
        background: rgba(30, 58, 138, 0.85); /* deep navy blue */
        border: 1px solid rgba(59, 130, 246, 0.5);
        box-shadow: 0 4px 12px rgba(30, 58, 138, 0.5);
    }

        .blue-btn:hover {
            background: rgba(59, 130, 246, 0.2);
            border: 1px solid rgba(59, 130, 246, 0.8);
            transform: scale(1.05);
            box-shadow: 0 0 20px rgba(59, 130, 246, 0.8);
        }

        .blue-btn:active {
            transform: scale(0.96);
            box-shadow: 0 0 12px rgba(30, 58, 138, 0.9) inset;
        }

    /* Red Glass Button (Delete) */
    .red-btn {
        background: rgba(153, 27, 27, 0.85); /* deep red */
        border: 1px solid rgba(239, 68, 68, 0.5);
        box-shadow: 0 4px 12px rgba(153, 27, 27, 0.5);
    }

        .red-btn:hover {
            background: rgba(239, 68, 68, 0.2);
            border: 1px solid rgba(239, 68, 68, 0.8);
            transform: scale(1.05);
            box-shadow: 0 0 20px rgba(239, 68, 68, 0.8);
        }

        .red-btn:active {
            transform: scale(0.96);
            box-shadow: 0 0 12px rgba(153, 27, 27, 0.9) inset;
        }

    /* Glass Table */
    .glass-table {
        background: rgba(255, 255, 255, 0.05) !important;
        backdrop-filter: blur(12px);
        border-radius: 15px;
        overflow: hidden;
        color: #fff;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .glass-thead {
        background: rgba(255, 255, 255, 0.15) !important;
        backdrop-filter: blur(10px);
    }

        .glass-thead th {
            background: transparent !important;
            color: #ffffff !important;
            font-weight: 600;
            border-color: rgba(255, 255, 255, 0.2) !important;
            padding: 15px 10px;
        }

    .glass-tbody {
        background: transparent !important;
    }

    .glass-row {
        background: transparent !important;
        transition: all 0.3s ease;
        border-color: rgba(255, 255, 255, 0.1) !important;
    }

        .glass-row:hover {
            background: rgba(59, 130, 246, 0.15) !important;
            transform: scale(1.01);
            box-shadow: 0 5px 20px rgba(59, 130, 246, 0.3);
        }

        .glass-row td {
            background: transparent !important;
            color: #fff !important;
            border-color: rgba(255, 255, 255, 0.1) !important;
            padding: 12px 10px;
        }

    /* Table Action Buttons */
    .glass-action-btn {
        border-radius: 8px;
        padding: 6px 12px;
        transition: all 0.3s ease;
    }

    /* Badges */
    .badge-available {
        background: rgba(0, 255, 100, 0.6) !important;
        backdrop-filter: blur(8px);
        color: #fff !important;
        padding: 8px 12px;
        border-radius: 12px;
        border: 1px solid rgba(0, 255, 100, 0.3);
    }

    .badge-unavailable {
        background: rgba(255, 50, 50, 0.6) !important;
        backdrop-filter: blur(8px);
        color: #fff !important;
        padding: 8px 12px;
        border-radius: 12px;
        border: 1px solid rgba(255, 50, 50, 0.3);
    }

    /* Images */
    .img-preview {
        width: 50px;
        height: 40px;
        object-fit: cover;
        border-radius: 8px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        transition: all 0.3s ease;
    }

        .img-preview:hover {
            transform: scale(1.2);
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.4);
        }

    /* Actions Bar */
    .actions-bar {
        background: rgba(255, 255, 255, 0.05) !important;
        backdrop-filter: blur(8px);
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 15px 15px 0 0;
    }

    /* Alerts */
    .professional-alert {
        background: rgba(0, 255, 100, 0.2) !important;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(0, 255, 100, 0.3) !important;
        border-radius: 15px;
        color: #fff !important;
    }

    /*Bootstrap Overrides */
    .table-hover tbody tr:hover {
        background-color: transparent !important;
    }

    .table > :not(caption) > * > * {
        background-color: transparent !important;
    }

    .form-control:focus {
        background-color: transparent !important;
    }
</style>

<script>
    //    document.querySelectorAll(".search-box").forEach(input => {
    //     input.addEventListener("keyup", function () {
    //         let brand = document.getElementById("brandFilter").value.toLowerCase();
    //         let model = document.getElementById("modelFilter").value.toLowerCase();
    //         let status = document.getElementById("statusFilter").value.toLowerCase();

    //         let rows = document.querySelectorAll("#carTable tbody tr");

    //         rows.forEach(row => {
    //             let brandCol = row.cells[0].textContent.toLowerCase();
    //             let modelCol = row.cells[1].textContent.toLowerCase();
    //             let statusCol = row.cells[8].textContent.toLowerCase();

    //             if (brandCol.includes(brand) &&
    //                 modelCol.includes(model) &&
    //                 statusCol.includes(status)) {
    //                 row.style.display = "";
    //             } else {
    //                 row.style.display = "none";
    //             }
    //         });
    //     });
    // });

    function filterTable() {
        let brand = document.getElementById("brandFilter").value.toLowerCase();
        let model = document.getElementById("modelFilter").value.toLowerCase();
        let status = document.getElementById("statusFilter").value.toLowerCase();

        let rows = document.querySelectorAll("#carTable tbody tr");

        rows.forEach(row => {
            let brandCol = row.cells[0].textContent.toLowerCase();
            let modelCol = row.cells[1].textContent.toLowerCase();
            let statusCol = row.cells[8].textContent.toLowerCase().trim();

            let match =
                brandCol.includes(brand) &&
                modelCol.includes(model) &&
                (status === "" || statusCol === status);

            row.style.display = match ? "" : "none";
        });
    }

    document.getElementById("brandFilter").addEventListener("keyup", filterTable);
    document.getElementById("modelFilter").addEventListener("keyup", filterTable);
    document.getElementById("statusFilter").addEventListener("change", filterTable);

</script>